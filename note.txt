MODEL

In software development, particularly in the context of web applications and databases, a model refers to the representation of data and the business logic behind it. Models are an essential part of the Model-View-Controller (MVC) architecture pattern, which is commonly used to structure applications.

1. Model in MVC Architecture
In the MVC architecture:

Model: Represents the data and business logic of the application. It communicates with the database and performs operations like creating, reading, updating, and deleting data (often referred to as CRUD operations). The model doesn't know anything about how the data is presented to the user (that's the View's job) or how the user interacts with it (that's the Controller's job).

View: Represents the UI (user interface) of the application, which displays the data to the user.

Controller: Acts as an intermediary between the View and Model. It processes user input, modifies data through the model, and updates the view accordingly.


******************************************************

2. Model in Databases
In the context of databases, a model typically refers to a data schema or a structure that defines how data is represented in the system.

For example, in MongoDB (a NoSQL database), a model is often created using a Mongoose schema in Node.js. This schema defines how the data is structured, what fields are required, and any validation rules. Once a model is defined, it can be used to create, retrieve, update, or delete documents in the database.

we created a model folder and created user.model.js and subscriiption.model.js files

things we learnt 
1. we learnt how to create a model with different data types properties.

2. we learnt how to validate those properties.
3. we learnt how to call a specific action before a document is saved.
4. we used an external function logic to update a property.